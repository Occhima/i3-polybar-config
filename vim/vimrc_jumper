runtime! archlinux.vim
so ~/.vim/plugins.vim
map <C-t> :NERDTreeToggle<CR>

" reformat (without plugins)
map <F7> mzgg=G`z
" compile c++ file
map <F8> :w <CR> :!g++ % -o %<  <CR>
" execute c++ file with input.txt as stdin
map <F9> :!cat input.txt \| ./%<  <CR>
map <F10> :!cat test_input.txt \| ./%<  <CR>
" fzf search on files
map ; :Files<CR>

" move line up and down
nnoremap <C-S-Up> <Up>"add"ap<Up>
nnoremap <C-S-Down> "add"ap

" Format c code
nnoremap <C-S-i> :ClangFormat <CR>

" highlight every search match
nnoremap <C-h> :set hlsearch!<CR>

" smooth scroll

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" indentation settings
set tabstop=3
set shiftwidth=3
set softtabstop=0 expandtab
set incsearch

" thanks to wincent
set foldmethod=indent               " not as cool as syntax, but faster
set foldlevelstart=99               " start unfolded
 " folding
nnoremap <s-tab> za
" 
let g:clang_format#style_options = {
            \ "Standard" : "C++11",
            \ "IndentWidth" : 3,
            \ "UseTab" : "false",
            \ "AccessModifierOffset" : -2,
            \ "ColumnLimit" : 0 }

" to enable copy-past to/from system clipboard
set clipboard=unnamedplus

set spell spelllang=en_gb
set nospell
set number
set cursorline
set mouse=a
syntax on 

" http://vim.wikia.com/wiki/Auto_highlight_current_word_when_idle
" Highlight all instances of word under cursor, when idle.
" Useful when studying strange source code.
" Type z/ to toggle highlighting on/off.
nnoremap z/ :if AutoHighlightToggle()<Bar>set hls<Bar>endif<CR>
function! AutoHighlightToggle()
  let @/ = ''
  if exists('#auto_highlight')
    au! auto_highlight
    augroup! auto_highlight
    setl updatetime=4000
    echo 'Highlight current word: off'
    return 0
  else
    augroup auto_highlight
      au!
      au CursorHold * let @/ = '\V\<'.escape(expand('<cword>'), '\').'\>'
    augroup end
    setl updatetime=300
    echo 'Highlight current word: ON'
    return 1
  endif
endfunction


let mapleader = "\<space>"
nnoremap <space> <nop>
"todo: replace with the new plugin
"nnoremap <leader>d :YcmCompleter GoToDefinition<CR>
"nnoremap <leader>r :YcmCompleter GoToReferences<CR>
nnoremap <leader>f :NERDTreeFind<CR>
nnoremap <leader>b :make <CR>
au BufRead,BufNewFile *.md setlocal textwidth=80

colorscheme gruvbox
set bg=dark
